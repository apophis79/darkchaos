name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    outputs:
      build_number: ${{ steps.version.outputs.build_number }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: version
        run: |
          git fetch --unshallow
          $build_number = git rev-list d5dc63720abb4a5a4ca3c6724c7497e593e14eb3..HEAD --count
          echo "build_number=$build_number" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Install Node.js and Grunt
        run: |
          Invoke-WebRequest -Uri https://nodejs.org/dist/v16.20.0/node-v16.20.0-x64.msi -OutFile nodejs.msi
          Start-Process msiexec.exe -ArgumentList '/i', 'nodejs.msi', '/quiet', '/norestart' -Wait
          npm install -g grunt-cli
        shell: pwsh

      - name: Run Grunt to Concat vpx Files
        run: |
          cd scripts
          npm install
          grunt concat:vpx
          Move-Item -Path dest/vpx/tablescript.vbs -Destination ../DarkChaos-Dev/script.vbs -Force
        shell: pwsh

      - name: Install jq
        run: |
          Invoke-WebRequest -Uri https://github.com/stedolan/jq/releases/latest/download/jq-win64.exe -OutFile jq.exe
          Move-Item jq.exe -Destination 'C:\Program Files\Git\usr\bin\jq.exe'
        shell: pwsh

      - name: Modify locked property
        run: |
          jq '.locked = 1' DarkChaos-Dev/gamedata.json > temp.json
          mv temp.json DarkChaos-Dev/gamedata.json
        working-directory: ${{ github.workspace }}
        shell: bash

      - name: Download vpxtool
        run: |
          Invoke-WebRequest -Uri https://github.com/francisdb/vpxtool/releases/download/v0.13.0/vpxtool-Windows-x86_64-v0.13.0.zip -OutFile vpxtool.zip
          Expand-Archive vpxtool.zip -DestinationPath .\vpxtool
        shell: pwsh

      - name: Run Command
        run: |
          .\vpxtool\vpxtool.exe assemble DarkChaos-Dev
          Rename-Item -Path .\DarkChaos-Dev.vpx -NewName "DarkChaos${{ steps.version.outputs.build_number }}.vpx"
        shell: pwsh

      - uses: actions/upload-artifact@v4
        with:
          name: DarkChaos_${{ steps.version.outputs.build_number }}
          path: ./DarkChaos${{ steps.version.outputs.build_number }}.vpx
